StringOrInt : Bool -> Type
StringOrInt False = String
StringOrInt True = Int


getStringOrInt : (isInt : Bool) -> StringOrInt isInt
getStringOrInt False = "some string"
getStringOrInt True = 18

valToString : (isInt : Bool) -> StringOrInt isInt -> String
valToString False x = trim x
valToString True x = cast x


AdderType : (numargs : Nat) -> Type
AdderType Z = Int
AdderType (S k) = (next : Int) -> AdderType k

adder : (numargs : Nat) -> (acc: Int) -> AdderType numargs
adder Z acc = acc
adder (S k) acc = \next => ?adder_rhs_3
